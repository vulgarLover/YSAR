package ${cfg.basePackage}.module .${cfg.modulePackage}.domain.entity;

import com.baomidou.mybatisplus.annotation.TableName;
import com.gangquan360.hddz.web.common.domain.dto.BaseDomain;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.experimental.Accessors;

import java.math.BigDecimal;
#if(${cfg.hasDate})
import java.util.Date;
#end
import lombok.Data;
import java.sql.Timestamp;
import java.io.Serializable;

/**
* [  ]
*
* @author ${cfg.author}
* @version 1.0
* @company ${cfg.company}
* @copyright (c) 2018 ${cfg.company}Inc. All rights reserved.
* @date ${cfg.date}
* @since JDK1.8
*/
#if(${entityLombokModel})
@Data
#if(${superEntityClass})
@EqualsAndHashCode(callSuper = true)
#else
@EqualsAndHashCode(callSuper = false)
#end
@Accessors(chain = true)
#end
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${swagger2})
@ApiModel(value="${entity}对象", description="$!{table.comment}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable {
#end

#if(${entitySerialVersionUID})
private static final long serialVersionUID=1L;
#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})

#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
#if(${swagger2})
        @ApiModelProperty(value="${field.comment}")
#else
/**
* ${field.comment}
*/
#end
#end
#if(${field.keyFlag})
## 主键
#if(${field.keyIdentityFlag})
        @TableId(value="${field.name}",type=IdType.AUTO)
#elseif(!$null.isNull(${idType}) && "$!idType" != "")
        @TableId(value="${field.name}",type=IdType.${idType})
#elseif(${field.convert})
        @TableId("${field.name}")
#end
## 普通字段
#elseif(${field.fill})
## -----   存在字段填充设置   -----
#if(${field.convert})
        @TableField(value="${field.name}",fill=FieldFill.${field.fill})
#else
        @TableField(fill=FieldFill.${field.fill})
#end
#elseif(${field.convert})
        @TableField("${field.name}")
#end
## 乐观锁注解
#if(${versionFieldName}==${field.name})
        @Version
#end
## 逻辑删除注解
#if(${logicDeleteFieldName}==${field.name})
        @TableLogic
#end
        private ${field.propertyType} ${field.propertyName};
#end

}
